% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edit.R
\name{reordering}
\alias{reordering}
\alias{reorder_authors}
\alias{reorder_affiliations}
\title{Reordering authors and affiliations}
\usage{
reorder_authors(project, ..., after = 0L, reprint_header = TRUE)

reorder_affiliations(author, ..., after = 0L)
}
\arguments{
\item{project, author}{The \code{id} or unambiguous names of a project/author
whose authors/affiliations you want to reorder.}

\item{...}{The \code{id}s or names of authors/affiliations you want to
reorder, optionally with their new ranks explicitly stated. See details.}

\item{after}{If not specifying explicit ranks in \code{...}, the position you
  want the elements to come after. Works like the \code{after} argument in
  \code{\link[base]{append}} or \code{forcats::fct_relevel}.

  Ignored if ranks are explicitly provided in \code{...}.}

\item{reprint_header}{Should the \code{project}'s header be printed to the
console?}
}
\description{
These functions allow the user to reorder authors on a project or to reorder
an author's affiliations.
}
\details{
The order of these affects the order of authors and affiliations in
\code{\link{header}}s.

When specifying explicit ranks, enter \code{...} as name-value pairs, in
which the names are names of authors/affiliations (or even their [back]quoted
\code{id}s) and the values are integer ranks you want them to occupy. If
entering an integer greater than the total number of authors/affiliations,
the element will be put at the end. The \code{after} argument will be ignored
in this case.

When not specifying explicit ranks, simply enter author/affiliations
\code{id}s or names in the order you want them, and the ones you entered will
be inserted after the position specified by the \code{after} argument. By
default (\code{after = 0}), the authors/affiliations in \code{...} will be
moved to the front.
}
\examples{

# Imagine the author order on project 1 was originally:
tibble::tribble(
  ~id,  ~given_names,  ~last_name,
    5,  "Adam",        "Smith",
   22,  "Britney",     "Jones",
    9,  "Caroline",    "Perry",
  100,  "David",       "Herman",
   47,  "Esther",      "Ireland")

# The following examples are sequential to improve readability.

\dontrun{
reorder_authors(project = 1, "David", 22, "47", after = 1)
}
# Results would be:
tibble::tribble(
  ~id,  ~given_names,  ~last_name,
    5,  "Adam",        "Smith",
  100,  "David",       "Herman",
   22,  "Britney",     "Jones",
   47,  "Esther",      "Ireland",
    9,  "Caroline",    "Perry")

# rearranging the rearrangement:
\dontrun{
reorder_authors(1, Jones = 99, `47` = 2, "100" = 1)
}
# Results would be:
tibble::tribble(
  ~id,  ~given_names,  ~last_name,
  100,  "David",       "Herman",
   47,  "Esther",      "Ireland",
    5,  "Adam",        "Smith",
    9,  "Caroline",    "Perry",
   22,  "Britney",     "Jones")

}
